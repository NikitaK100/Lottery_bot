from aiogram import types
from keyboard.inline.keyboard_back_account import keyboard_back
from keyboard.inline.keyboards_mixin import confirm_keyboards
from loader import dp, bot 
from aiogram.dispatcher.storage import FSMContext
from utils.db_api.schemas import quick_commands as db2
from utils.db_api.schemas import commands_lottery as db3
from utils.db_api.schemas import lottery_participants as db4
from keyboard.inline.keyboard_account import keyboard_add_money
from utils.db_api.schemas.user import Participants

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∫—É–ø–∫–∏ –ª–æ—Ç—Ç–µ—Ä–µ–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –ø–æ–∫—É–ø–∫–æ–π


@dp.callback_query_handler(text='buy', state='buying_lottery')
async def buy_lottery(call: types.CallbackQuery, state: FSMContext):
    await call.answer()
    user_id = call.from_user.id
    data = await state.get_data()
    number_lottery = data.get('lottery_id')
    data_db2 = await db2.select_user(id=user_id)
    data_db_3 = await db3.select_id_lottery(id=number_lottery)
    data_db4 = await db4.select_user(id=user_id)
    count = await db4.count_users(lottery_id=number_lottery)

    if data_db2.wallet < data_db_3.price:
        await call.message.edit_text('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç',
                                  reply_markup=keyboard_back)
        await state.reset_state() 

    elif await db4.count_users(lottery_id=number_lottery) == data_db_3.quantity:
        await call.message.edit_text(f'–ù–∞–±—Ä–∞–Ω–æ –º–∞—Å–∫–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ {count}',
                                  reply_markup=keyboard_back)
        await state.reset_state()

    elif data_db2.wallet >= data_db_3.price:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ø—ã—Ç–∫—É –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –∫—É–ø–∏—Ç—å –æ–¥–Ω—É –∏ —Ç—É –∂–µ –ª–æ—Ç–µ—Ä–µ—é 
        if data_db4:                                                                        # –µ—Å–ª–∏ id —é–∑–µ—Ä–∞ —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ
            list_db4 = [str(participant.id) + str(participant.lottery_id)                   # –¥–æ—Å—Ç–∞–ª –≤—Å–µ id –∏ lottery_id + —Å–∫–æ–Ω–∫–æ—Ç–µ–Ω–∏—Ä–æ–≤–∞–ª
                        for participant in await db4.select_all_lottery_where_id(user_id)]  
            list_db4.append(str(user_id) + str(number_lottery))                             # –¥–æ–±–∞–≤–∏–ª –≤ —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—á–µ—Ç –ø–µ—Ä–µ–¥–∞—Ç—å —é–∑–µ—Ä
            filtering_list_db4 = set(list_db4)                                              # set –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

            if len(filtering_list_db4) < len(list_db4):                             # –µ—Å–ª–∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ < –Ω–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ
                await call.message.edit_text('–í—ã —É–∂–µ —É—á–∞—Å–≤—Å—Ç–≤—É–π—Ç–µ –≤ —ç—Ç–æ–π –ª–æ—Ç–µ—Ä–µ–µ!', # —Ç–æ–≥–¥–∞ –∑–∞–ø—Ä–µ—â–∞–µ–º –ø–æ–∫—É–ø–∞—Ç—å –ª–æ—Ç–µ—Ä–µ—é 
                                        reply_markup=keyboard_back)
                await state.reset_state()

            else:
                wallet_balance = await db2.select_user(id=call.from_user.id)
                buy = wallet_balance.wallet - data_db_3.price
                await db2.update_wallet(id=call.from_user.id, wallet=buy)
                await db4.add_user(id=call.from_user.id,
                                lottery_id=number_lottery,
                                name=call.from_user.full_name)
                await call.message.edit_text('–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!',
                                            reply_markup=keyboard_back)
                await state.finish()
            
        else:
            wallet_balance = await db2.select_user(id=call.from_user.id)
            buy = wallet_balance.wallet - data_db_3.price
            await db2.update_wallet(id=call.from_user.id, wallet=buy)   #  —Å–ø–∏—Å—ã–≤–∞–µ–º –º–æ–Ω–µ—Ç—ã –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ 
            await db4.add_user(id=call.from_user.id,                    # –ø–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–¥
                            lottery_id=number_lottery,
                            name=call.from_user.full_name)
            await call.message.edit_text('–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!',
                                        reply_markup=keyboard_back)
            await state.finish()


@dp.callback_query_handler(text='cancel_buy', state='buying_lottery')
async def cancel_buy_lottery(call: types.CallbackQuery, state: FSMContext):
    await call.answer()
    user_id = call.from_user.id
    name = call.from_user.full_name
    wallet = await db2.select_user(id=user_id)
    await call.message.edit_text(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å <b>{name}</b>\n\n'
                                f'–ë–∞–ª–∞–Ω—Å: <b>{wallet.wallet}</b> –º–æ–Ω–µ—Ç \n\n'
                                f'üîª–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—åüîª',
                                reply_markup=keyboard_add_money)
    await state.reset_state()



